######################
# Simple instruction
pip install mecab-python3
echo -e "白本線1.40\n柱上" | python /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/local/scripts/mecab.py
# 白本|シロホン 線|セン 1|イチ .|. 40|フォーティ
# 柱上|チュージョー

# Need access to gcc at ‘/project/nakamura-lab08/Work/bin-wu/share/tools/gcc/path.sh’
/project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/tools/install_openjtalk_for_user_dict.sh ./
echo -e "白本線1.40\n柱上" | python /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/local/scripts/openjtalk.py
# 白|シロ 本線|ホンセン 一|イッ ．|テン 四|ヨン ０|ゼロ
# 柱|ハシラ 上|ジョー

#######################
# Complete instruction
# Tested on ahcclcssa02 with isolated env of
# /project/nakamura-lab08/Work/bin-wu/.local/miniconda3/envs/tp

# # Create an isolated env. (Optional)
# conda create --name tp python==3.8.1 -y # tp short for text_processing
# conda activate tp
# conda install numpy -y # 1.22.3

# Copy the directory
cp -r /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing ./
cd text_processing

# First install the python version of mecab and openjtalk that support user dict
pip install mecab-python3
./tools/install_openjtalk_for_user_dict.sh tools/openjtalk_with_user_dict

# For simple test
./local/sandbox/test_simple.sh

# For complete test
# for kaldi toolkit compiled at gcc 5.4.0 (/project/nakamura-lab08/Work/bin-wu/share/tools/kaldi/src/bin/compute-wer)
source /project/nakamura-lab08/Work/bin-wu/share/tools/gcc/path.sh
./run.sh

######################
# About openjtalk chouon and sokuon problems
######################
# Simple instruction
pip install mecab-python3
echo -e "あのーホリケ\n防護しようか" | python /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/local/scripts/openjtalk.py |& tee text.openjtalk
# あの|アノ ーホリケ|ーホリケ
# 防護|ボーゴ しよ|シヨ う|ー か|カ
echo -e "あのーホリケ\n防護しようか" | python /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/local/scripts/mecab.py|& tee text.mecab # default using undic_csj3.1
# あのー|アノー ホリケ|ホリケ
# 防護|ボーゴ しよう|シヨー か|カ
python /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing/local/normalize_openjtalk_with_mecab.py --openjtalk_text text.openjtalk --mecab_text text.mecab --verbose |& tee text.openjtalk.mecab
# あのー|アノー ホリケ|ホリケ
# 防護|ボーゴ しよう|シヨー か|カ
# Found a token starting with the chouon 'ー': あの|アノ ーホリケ|ーホリケ
# Replacing trans from openjtalk with mecab: あのー|アノー ホリケ|ホリケ
# Found a token starting with the chouon 'ー': 防護|ボーゴ しよ|シヨ う|ー か|カ
# Replacing trans from openjtalk with mecab: 防護|ボーゴ しよう|シヨー か|カ
rm -rf text.mecab  text.openjtalk  text.openjtalk.mecab

#######################
# Complete instruction
# Copy the directory
cp -r /project/nakamura-lab08/Work/bin-wu/share/sys/text_processing ./
cd text_processing

# For simple test of openjtalk chouon and sokuon problems
./local/sandbox/test_openjtalk_problem.sh

# openjtalk_mecab_parser (e.g., ./local/sandbox/test_openjtalk_problem.sh)
mkdir -p exp/del; ln -sf $KALDI_ROOT/egs/wsj/s5/utils/ utils
./local/openjtalk_mecab_parser.sh --text data/text/openjtalk_text_problem.scp --dir exp/del
